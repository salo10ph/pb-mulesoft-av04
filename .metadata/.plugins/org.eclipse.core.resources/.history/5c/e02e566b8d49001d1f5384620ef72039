package com.pb.mulesoft.av4.paymentservicepb.controller;

import java.net.URI;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.util.UriComponentsBuilder;

import com.pb.mulesoft.av4.paymentservicepb.dto.PagamentoDto;
import com.pb.mulesoft.av4.paymentservicepb.dto.PagamentoDto2;
import com.pb.mulesoft.av4.paymentservicepb.form.PagamentoForm;
import com.pb.mulesoft.av4.paymentservicepb.service.PagamentoService;

@RestController
@RequestMapping("/api/v1/order/payment")
public class PagamentoController {

	@Autowired
	private PagamentoService service;

	@GetMapping
	public Page<PagamentoDto2> listar(@PageableDefault(size = 10) Pageable paginacao) {
		return service.listar(paginacao);
	}

	@GetMapping("/{orderId}")
	public ResponseEntity<PagamentoDto2> detalhar(@PathVariable @NotNull Long orderId) {
		PagamentoDto2 dto = service.detalhar(orderId);
		return ResponseEntity.ok(dto);
	}

	@PostMapping
	public ResponseEntity<PagamentoDto> criar(@RequestBody @Valid PagamentoForm form, UriComponentsBuilder uriBuilder) {
		PagamentoDto pagamento = service.criar(form);
		URI uri = uriBuilder.path("/{orderId}").buildAndExpand(pagamento.getOrder_id()).toUri();

		return ResponseEntity.created(uri).body(pagamento);
	}
}